include(DOCGEN_MACROS)dnl
<html>
<head><title>dkim_eom()</title></head>
<body>
<!--
-->
<h1>dkim_eom()</h1>
<p align="right"><a href="index.html">[back to index]</a></p>

<table border="0" cellspacing=4 cellpadding=4>
<!---------- Synopsis ----------->
<tr><th valign="top" align=left width=150>SYNOPSIS</th><td>
<pre>
#include &lt;dkim.h&gt;
<a href="dkim_stat.html"><tt>DKIM_STAT</tt></a> dkim_eom(
	<a href="dkim.html"><tt>DKIM</tt></a> *dkim,
	bool *testkey
);
</pre>
Denote end-of-message for a message.  When verifying, process signatures in
order; when signing, compute all signatures.
</td></tr>

<!----------- Description ---------->
<tr><th valign="top" align=left>DESCRIPTION</th><td>
<table border="1" cellspacing=1 cellpadding=4>
<tr align="left" valign=top>
<th width="80">Called When</th>
<td><tt>dkim_eom()</tt> is called after the entire body of the message has
    been passed to the API via zero or more calls to
    <a href="dkim_body.html"><tt>dkim_body()</tt></a>. </td>
</tr>
</table>

<!----------- Arguments ---------->
<tr><th valign="top" align=left>ARGUMENTS</th><td>
    <table border="1" cellspacing=0>
    <tr bgcolor="#dddddd"><th>Argument</th><th>Description</th></tr>
    <tr valign="top"><td>dkim</td>
	<td>Message-specific handle, returned by <a href="dkim_sign.html">
        <tt>dkim_sign()</tt></a> or
        <a href="dkim_verify.html"><tt>dkim_verify()</tt></a>
	</td></tr>
    <tr valign="top"><td>testkey</td>
	<td>Optional pointer to a boolean value which is updated to indicate
	    whether the key found (if any) is marked as being a test key.
	</td></tr>
    </table>
</td></tr>

<!----------- Return Values ---------->
<tr>
<th valign="top" align=left>RETURN VALUES</th> 
<td>
<ul>
<li><tt>DKIM_STAT_INVALID</tt> may indicate the <tt>dkim</tt> handle was
    rendered unusable by a previous call, likely to
    <a href="dkim_eoh.html"><tt>dkim_eoh()</tt></a>, or simply that
    <tt>dkim_eoh()</tt> has not yet been called for this handle.
<li><tt>DKIM_STAT_INVALID</tt> may also indicate the <tt>dkim</tt> handle was
    passed to <a href="dkim_chunk.html"><tt>dkim_chunk()</tt></a> for
    message chunk processing but the end of message was never signaled via
    that interface.
<li><tt>DKIM_STAT_INVALID</tt> returned when signing may indicate that the
    key provided for signing did not meet the minimum key size requirement
    (see <tt><a href="dkim_options.html">dkim_options()</a></tt>).
@RESIGN_DOCIF@
<li><tt>DKIM_STAT_CANTVRFY</tt> is returned when passed a signing handle
    bound via <a href="dkim_resign.html"><tt>dkim_resign()</tt></a> to a
    verifying handle if the latter yielded no valid signatures.
@RESIGN_DOCENDIF@
<li>Other possible return values include all the
    <a href="dkim_stat.html"><tt>DKIM_STAT</tt></a> values.
</ul>
</td>
</tr>

<!----------- Notes ---------->
<tr>
<th valign="top" align=left>NOTES</th> 
<td>
<ul>
<li>By default, when verifying, this function processes all signatures, in
order.  If the <tt>DKIM_LIBFLAGS_VERIFYONE</tt> flag is set on the library,
then processing will stop after one good signature is found.  There may be
other signatures before or after that one in the message whose evaluation
might be meaningful to the calling application.  In that case, the calling
application should use the final handling callback (see
<a href="dkim_set_final.html"><tt>dkim_set_final()</tt></a> to get an
opportunity to process all of the signatures and possibly reorder them as
per the application's preference.  With the above flag set, this function will
use the signatures as reordered by that function (or in arrival order if
no reordering is done) and act on the first valid one, or the first one if
none are valid.
</ul>
</td>
</tr>
</table>

<hr size="1">
<font size="-1">
Copyright (c) 2005, 2007, 2008 Sendmail, Inc. and its suppliers.
All rights reserved.
<br>
Copyright (c) 2009, 2010, 2013, The Trusted Domain Project.  All rights reserved.

<br>
By using this file, you agree to the terms and conditions set
forth in the respective licenses.
</font>
</body>
</html>
